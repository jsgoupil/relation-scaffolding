@{
    var modelMetadata = ViewData.ModelMetadata;
    RelationScaffolding.RelationSingleAttribute relationAttribute = modelMetadata.ContainerType.GetMembers().FirstOrDefault(x => x.Name == modelMetadata.PropertyName).GetCustomAttributes(typeof(RelationScaffolding.RelationSingleAttribute), false).FirstOrDefault() as RelationScaffolding.RelationSingleAttribute;
    var lookup = new RelationScaffolding.RelationHelper(ViewData).GetLookup();

    ViewData.TemplateInfo.HtmlFieldPrefix = string.Empty;

    var propertyName = modelMetadata.PropertyName;
    if (ViewData["ShortcutProperty"] == null || (bool)ViewData["ShortcutProperty"] == false)
    {
        propertyName += ".";
    }

    propertyName += lookup.KeyMember.MemberInfo.Name;

    // Bug with DropDownList, we must copy the value in the ViewData
    ViewData[modelMetadata.PropertyName] = lookup.KeyMember.Value;

    string empty = null;
    if (relationAttribute != null)
    {
        empty = relationAttribute.Empty;
    }
}

@Html.DropDownList((string)propertyName, new System.Web.Mvc.SelectList((System.Collections.IEnumerable)ViewData["list"] ?? new System.Collections.ObjectModel.Collection<object>(), lookup.KeyMember.MemberInfo.Name, lookup.DisplayMember.MemberInfo.Name, lookup.KeyMember.Value), empty, (object)ViewData["htmlAttributes"])