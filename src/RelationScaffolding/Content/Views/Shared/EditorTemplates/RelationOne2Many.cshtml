@using System.Linq;

@{
    var modelMetadata = ViewData.ModelMetadata;
    RelationScaffolding.RelationOne2ManyAttribute relationAttribute = modelMetadata.ContainerType.GetMembers().FirstOrDefault(x => x.Name == modelMetadata.PropertyName).GetCustomAttributes(typeof(RelationScaffolding.RelationOne2ManyAttribute), false).FirstOrDefault() as RelationScaffolding.RelationOne2ManyAttribute;
    var lookup = new RelationScaffolding.RelationCollectionHelper(ViewData).GetLookup();
    var data = ViewData["list"];
    if (data == null)
    {
        data = ViewData.Model;
    }

    ViewData.TemplateInfo.HtmlFieldPrefix = string.Empty;

    var listType = modelMetadata.ModelType.GetGenericArguments().First();
    var listMemberLookup = new RelationScaffolding.RelationMemberLookup(null, listType);
    var editName = listMemberLookup.EditMemberInfo == null ? "" : listMemberLookup.EditMemberInfo.Name;
}

<div class="relation" data-relation-name="@modelMetadata.PropertyName" data-relation-id="@listMemberLookup.KeyMemberInfo.Name" data-relation-edit="@editName">
    <div class="relation-list">
        <ul>
            @if (data != null)
            {
                var index = 0;
                foreach (var relationMemberLookup in ((IEnumerable<object>)data).Select(o => new RelationScaffolding.RelationMemberLookup(o)))
                {
                    index++;
                    var guid = Guid.NewGuid().ToString("N");
                    <li>
                        <input type="hidden" name="@(modelMetadata.PropertyName)[@index].@relationMemberLookup.KeyMemberInfo.Name" value="@Html.AttributeEncode(relationMemberLookup.SelectedObjectKey)" />
                        @if (relationMemberLookup.EditMemberInfo != null)
                        {
                            <input type="hidden" name="@(modelMetadata.PropertyName)[@index].@relationMemberLookup.EditMemberInfo.Name" value="@Html.AttributeEncode(relationMemberLookup.SelectedObjectEdit)" />
                        }

                        <input type="checkbox" name="@(modelMetadata.PropertyName).index" value="@index" checked="@lookup.Any(l => Object.Equals(l.SelectedObjectKey, relationMemberLookup.SelectedObjectKey))" id="@guid" />
                        <label for="@guid">@Html.Encode(relationMemberLookup.SelectedObjectDisplay)</label>
                    </li>
                }
            }
        </ul>
    </div>
    @if (relationAttribute.CanAdd)
    {
        <div class="relation-add">
            @Html.TextBox(Guid.NewGuid().ToString("N"))
            <button type="button">Add</button>
        </div>
    }
</div>
